plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
    id "org.unbroken-dome.test-sets" version "4.0.0"
}


group 'com.application'
version '1.0-SNAPSHOT'


repositories {
    mavenCentral()
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


java{
    toolchain{
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}


javafx {
    version = '11.0.2'
    modules = ['javafx.controls', 'javafx.fxml']
}


testSets{
    test
    integrationTest
}


dependencies {

    // Junit5 dependencies
    testImplementation  'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testCompileOnly     'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testImplementation  'org.junit.jupiter:junit-jupiter:5.8.2'

    // TestFX dependencies
    testCompileOnly     "org.testfx:testfx-core:4.0.16-alpha"
    testImplementation  "org.testfx:testfx-junit5:4.0.16-alpha"

    // Headless testing
    // -PnoHeadless if must be run in head mode
    testImplementation   "org.testfx:openjfx-monocle:jdk-11+26"

    // Mockito
    testImplementation  'org.mockito:mockito-core:4.6.1'

    // AssertJ
    integrationTestImplementation 'org.assertj:assertj-core:3.23.1'

}


jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}


jlinkZip {
    group = 'distribution'
}


task deleteFiles(type: Delete) {
    delete fileTree('build/reports/tests') {
        include '**/*.png'
    }
}


tasks.withType(Test){
    useJUnitPlatform()

    testLogging{
        events "passed", "skipped", "failed"
    }

    if (!project.hasProperty("noHeadless")) {
        jvmArgs "-Dheadless=true"
    }
}


test{
    dependsOn(deleteFiles)
    dependsOn(integrationTest)
}


